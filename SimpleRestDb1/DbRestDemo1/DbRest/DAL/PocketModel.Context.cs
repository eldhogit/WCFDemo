//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DbRest.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PocketDbContext : DbContext
    {
        public PocketDbContext()
            : base("name=PocketDbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Owner> Owners { get; set; }
        public virtual DbSet<Product> Products { get; set; }
    
        public virtual ObjectResult<GetAllOrderDetails_sp_Result> GetAllOrderDetails_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOrderDetails_sp_Result>("GetAllOrderDetails_sp");
        }
    
        public virtual ObjectResult<GetAllOrderMasters_sp_Result> GetAllOrderMasters_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOrderMasters_sp_Result>("GetAllOrderMasters_sp");
        }
    
        public virtual ObjectResult<GetAllOwners_sp_Result> GetAllOwners_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOwners_sp_Result>("GetAllOwners_sp");
        }
    
        public virtual ObjectResult<GetAllProducts_sp_Result> GetAllProducts_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProducts_sp_Result>("GetAllProducts_sp");
        }
    
        public virtual ObjectResult<GetOrderDetail_Result> GetOrderDetail(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderDetail_Result>("GetOrderDetail", idParameter);
        }
    
        public virtual ObjectResult<GetOrderMaster_sp_Result> GetOrderMaster_sp(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderMaster_sp_Result>("GetOrderMaster_sp", idParameter);
        }
    
        public virtual ObjectResult<GetOwnerById_sp_Result> GetOwnerById_sp(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOwnerById_sp_Result>("GetOwnerById_sp", idParameter);
        }
    
        public virtual ObjectResult<GetProduct_sp_Result> GetProduct_sp(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProduct_sp_Result>("GetProduct_sp", idParameter);
        }
    
        public virtual int InsertOwner_sp(string name, Nullable<bool> isActive, Nullable<long> createdBy, Nullable<long> modifiedBy, Nullable<System.DateTime> createdDate, Nullable<System.DateTime> modifiedDate)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertOwner_sp", nameParameter, isActiveParameter, createdByParameter, modifiedByParameter, createdDateParameter, modifiedDateParameter);
        }
    
        public virtual int UpdateOwnerById_sp(Nullable<long> id, string name, Nullable<bool> isActive, Nullable<System.DateTime> createdDate, Nullable<System.DateTime> modifiedDate, Nullable<long> createdBy, Nullable<long> modifiedBy)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOwnerById_sp", idParameter, nameParameter, isActiveParameter, createdDateParameter, modifiedDateParameter, createdByParameter, modifiedByParameter);
        }
    }
}
